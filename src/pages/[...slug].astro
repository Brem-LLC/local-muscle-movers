---
import keystaticConfig from 'keystatic.config'
import { createReader } from '@keystatic/core/reader'
import Layout from '@layouts/Base.astro'
import ShortHero from '@components/ShortHero.astro'
import Story from '@components/Story.astro'
import Mission from '@components/Mission.astro'
import WhyLMMV2 from '@components/WhyLMMV2.astro'
import NedQuote from '@components/NedQuote.astro'
import MovingChecklistV2 from '@components/MovingChecklistV2.astro'
import PoliciesV2 from '@components/PoliciesV2.astro'
import JoinForm from '@components/joinForm.jsx'
import QuoteFormDemo from '@components/QuoteFormDemo'
import WhoAreWe from '@components/WhoAreWe.astro'
import CallToAction from '@components/CallToAction.astro';
import Services from '@components/Services.astro'

export async function getStaticPaths() {
    const reader = createReader(process.cwd(), keystaticConfig)
    const pages = await reader.collections.pages.all()
    return pages.map(({ slug, entry }) => {
        return {
            params: { slug },
            props: { entry }
        }
    })
}
const { entry } = Astro.props
const { slug } = Astro.params
---

<Layout title={entry.name}>
    {entry?.componentBlocks[0] && entry?.componentBlocks.map((block: any) => {
		if (slug === 'join') {
			return <JoinForm client:only="react" />
		}
		if (slug === 'hire-us') {
			return <QuoteFormDemo client:only="react" />
		}
		switch (block.discriminant) {
			case 'shortHero':
				return <ShortHero block={block.value} />
			case 'headerTextAndImage':
				return <Mission block={block.value} />
			case 'headerTextButtonAndImages':
				return <WhyLMMV2 block={block.value} />
			case 'testimonialCTA':
				return <NedQuote block={block.value} />
			case 'movingChecklistV2':
				return <MovingChecklistV2 block={block.value} />
			case 'policiesAndContracts':
				return <PoliciesV2 block={block.value} />
			case 'imageAndText':
				return <WhoAreWe block={block.value} />
			case 'videoAndText':
				return <Story block={block.value} />
			case 'ourServices':
				return <Services block={block.value} />
			case 'callToAction':
				return <CallToAction block={block.value} />
		}
    })}
</Layout>
